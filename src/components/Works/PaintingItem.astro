---
import Image from "astro/components/Image.astro";
import { type Painting } from "../../../types/index";

type Props = {
  item: Painting;
};

const { item } = Astro.props;
---

<div class="group info-wrapper relative">
  <!-- Image Thumbnail -->
  <Image
    src={item.imageUrl}
    alt={item.name}
    loading="lazy"
    class="h-auto max-w-full cursor-pointer toggle"
    data-url={item.imageUrl.src}
    data-name={item.name}
    data-year={item.year}
  />

  <!-- Info on hover -->
  <div
    class="info absolute bottom-0 left-0 right-0 group-hover:flex flex-col justify-end p-2 bg-black bg-opacity-60 ease-out duration-300 transition-all opacity-0 group-hover:opacity-100"
  >
    <div class="text-white text-lg">{item.name}</div>
    <div class="flex justify-between w-full mt-1">
      <div class="text-white">{item.year}</div>
      <div class="text-white">{item.size}</div>
    </div>
  </div>
</div>

<!-- Modal for enlarged image -->
<div
  id="modal"
  class="modal hidden !mt-0 fixed inset-0 bg-black bg-opacity-80 flex justify-center items-center z-50"
>
  <div class="relative">
    <!-- Dynamically updated enlarged image -->
    <Image
      id="modal-img"
      src={item.imageUrl}
      alt="Enlarged Image"
      class="max-h-[80vh] w-fit cursor-pointer object-contain"
    />
    <div
      class="flex text-white gap-2 w-full justify-center items-center mt-2 text-xl"
    >
      <p id="modal-name" class="font-semibold"></p>
      <span>-</span>
      <p id="modal-year" class="font-semibold"></p>
    </div>

    <!-- Close button -->
    <button
      id="close-modal"
      class="absolute -top-6 -right-6 text-white text-xl cursor-pointer"
      >&#x2715;</button
    >
  </div>
</div>
<script>
  const toggleItems = document.querySelectorAll(".toggle");
  const modal = document.getElementById("modal");
  const closeModal = document.getElementById("close-modal");
  const modalImg = document.getElementById("modal-img");

  // Close modal when clicking the close button or clicking outside the image
  modal?.addEventListener("click", (event) => {
    if (event.target === modal || event.target === closeModal) {
      modal.classList.remove("visible");
      document.body.style.overflow = "auto"; // Re-enable background scrolling
    }
  });

  // Close modal with Esc key
  document.addEventListener("keydown", (event) => {
    if (event.key === "Escape" && modal?.classList.contains("visible")) {
      modal?.classList.remove("visible");
      document.body.style.overflow = "auto"; // Re-enable background scrolling
    }
  });
</script>
